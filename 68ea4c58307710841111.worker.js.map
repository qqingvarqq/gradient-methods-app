{"version":3,"sources":["../webpack/bootstrap","functions/function-implementations/penalty-function-1.ts","functions/function-implementations/penalty-function-2.ts","functions/function-implementations/rosenbrock-function.ts","functions/function-implementations/powell-function.ts","functions/index.ts","functions/function-implementations/assets/penalty-function-1.svg","functions/function-implementations/assets/penalty-function-2.svg","functions/function-implementations/assets/rosenbrock-function.svg","functions/function-implementations/assets/powell-function.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","minimization-algorithms/optimization/utils.ts","minimization-algorithms/optimization/two-step-difference-gradient-method.ts","minimization-algorithms/optimization/difference-gradient-method.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","minimization-algorithms/run-optimization.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","minimization-algorithms/index.ts","workers/worker-messages.ts","workers/minimization.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","validatePenaltyFunction1Params","x","length","PenaltyFunction1","srcUrl","PenaltyFunction1Src","id","xMin","outputMin","functionToCall","Error","firstSum","secondSum","Math","pow","isValidParams","validatePenaltyFunction2Params","PenaltyFunction2","PenaltyFunction2Src","validateRosenbrockFunctionParams","RosenbrockFunction","RosenbrockFunctionSrc","res","validatePowellFunctionParams","PowellFunction","PowellFunctionSrc","functionsToOptimize","Map","_toConsumableArray","arr","Array","isArray","arr2","iter","iterator","toString","from","TypeError","dividedDifferences","func","vectorX","fnOutputForVectorX","h","newVectorX","findEuclidNorm","vector","norma","sqrt","getLenOfTheStepAndNextVector","prevLenOfTheStep","derivativeValues","nextVectorX","calculateNextValue","fnOutputForNextVectorX","upperLimitation","alpha","diff","addVectorsByRule","ruleFn","vectorY","getNextLenOfTheStep","len","twoStepDifferenceGradientMethods","map","gamma","method","epsilon","countOfSteps","beta","h1","h2","derivativeValuesU","valuesU","step2VectorX","y","step2FnOutputForVectorX","derivativeValuesStep2","valuesStep2","min","diffBetweenSteps","max","apply","abs","twoStepDifferenceGradientMethod","DifferenceGradientMethod","values","_slicedToArray","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","_defineProperties","target","props","descriptor","configurable","writable","FunctionToCall","_fn","instance","Constructor","fn","callCount","this","protoProps","staticProps","MinimizationWorkerMessageTypes","optimizationMethods","algo","onOptimizeFunction","params","shift","OPTIMIZE_FUNCTION","functionId","optimizationMethodId","optimizationResult","floatNumberPrecision","precision","calculatePrecision","wrapedFn","fnToCall","callFn","t1","performance","now","xMinUnrounded","countOfIteration","t2","countOfCalculationFX","getCallCount","toFixed","num","timeInMs","round","runOptimization","functions","self","postMessage","RSULT_OF_OPTIMIZATION","addEventListener","event","data"],"mappings":"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","file":"68ea4c58307710841111.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/gradient-methods-app/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","import PenaltyFunction1Src from './assets/penalty-function-1.svg';\nimport {FunctionMetadata} from '../function';\nfunction validatePenaltyFunction1Params(x: number[]) {\n  return x.length >= 2;\n}\nfunction penaltyFunction1(x: number[]): number {\n  if (!validatePenaltyFunction1Params(x)) {\n    throw new Error(`x :${x} should be array with length at least 2`);\n  }\n  let firstSum: number = 0;\n  let secondSum: number = 0;\n  for (let i = 0; i < x.length; i++) {\n    firstSum += Math.pow(x[i] - 1, 2);\n    secondSum += Math.pow(x[i], 2);\n  }\n  firstSum *= 10 ** -5;\n  secondSum -= 0.25;\n  secondSum *= secondSum;\n  return firstSum + secondSum;\n}\n\nexport const PenaltyFunction1: FunctionMetadata = {\n  srcUrl: PenaltyFunction1Src,\n  id: 'penaltyFunction1',\n  name: 'Penalty function 1',\n  xMin: '(point depends from dimension of the input)',\n  outputMin: '(output depends from dimension of the input)',\n  functionToCall: penaltyFunction1,\n  isValidParams: validatePenaltyFunction1Params,\n};\n","import PenaltyFunction2Src from './assets/penalty-function-2.svg';\nimport {FunctionMetadata} from '../function';\n\nfunction validatePenaltyFunction2Params(x: number[]) {\n  return x.length >= 2;\n}\nfunction penaltyFunction2(x: number[]): number {\n  if (!validatePenaltyFunction2Params(x)) {\n    throw new Error(`x :${x} should be array with length at least 2`);\n  }\n  let firstSum: number = 0;\n  let secondSum: number = 0;\n  for (let i = 0; i < x.length; i++) {\n    firstSum += Math.pow(x[i] - 1, 2);\n    secondSum += Math.pow(x[i], 2);\n  }\n  secondSum -= 0.25;\n  secondSum = Math.pow(10, -3) * secondSum * secondSum;\n  return firstSum + secondSum;\n}\n\nexport const PenaltyFunction2: FunctionMetadata = {\n  srcUrl: PenaltyFunction2Src,\n  id: 'penaltyFunction2',\n  name: 'Penalty function 2',\n  xMin: '(point depends from dimension of the input)',\n  outputMin: '(output depends from dimension of the input)',\n  functionToCall: penaltyFunction2,\n  isValidParams: validatePenaltyFunction2Params,\n};\n","import RosenbrockFunctionSrc from './assets/rosenbrock-function.svg';\nimport {FunctionMetadata} from '../function';\n\nfunction validateRosenbrockFunctionParams(x: number[]) {\n  return x.length >= 2 && x.length % 2 === 0;\n}\n\nfunction rosenbrockFunction(x: number[]): number {\n  if (!validateRosenbrockFunctionParams(x)) {\n    throw new Error(\n      `x :${x} should be array with length at least 2 and length can be divided by 2 without remainder`\n    );\n  }\n  let res: number = 0;\n  for (let i = 0; i < x.length / 2; i++) {\n    res +=\n      100 * Math.pow(x[2 * i + 1] - x[2 * i] * x[2 * i], 2) +\n      Math.pow(1 - x[2 * i], 2);\n  }\n  return res;\n}\n\nexport const RosenbrockFunction: FunctionMetadata = {\n  srcUrl: RosenbrockFunctionSrc,\n  id: 'rosenbrockFunction',\n  name: 'Rosenbrock function',\n  xMin: '[1, 1, 1, 1, 1, 1, ...]',\n  outputMin: '0',\n  functionToCall: rosenbrockFunction,\n  isValidParams: validateRosenbrockFunctionParams,\n};\n","import PowellFunctionSrc from './assets/powell-function.svg';\nimport {FunctionMetadata} from '../function';\nfunction validatePowellFunctionParams(x: number[]) {\n  return x.length >= 4 && x.length % 4 === 0;\n}\nfunction powellFunction(x: number[]): number {\n  if (!validatePowellFunctionParams(x)) {\n    throw new Error(\n      `x :${x} should be array with length at least 4 length can be divided by 4 without remainder`\n    );\n  }\n  let res: number = 0;\n  for (let i = 0; i < x.length / 4; i++) {\n    res +=\n      Math.pow(x[4 * i] + 10 * x[4 * i + 1], 2) +\n      5 * Math.pow(x[4 * i + 2] - x[4 * i + 3], 2) +\n      Math.pow(x[4 * i + 1] - 2 * x[4 * i + 2], 4) +\n      10 * Math.pow(x[4 * i] - x[4 * i + 3], 4);\n  }\n  return res;\n}\n\nexport const PowellFunction: FunctionMetadata = {\n  srcUrl: PowellFunctionSrc,\n  id: 'powellFunction',\n  name: 'Powell function',\n  xMin: '[0, 0, 0, 0, ...]',\n  outputMin: '0',\n  functionToCall: powellFunction,\n  isValidParams: validatePowellFunctionParams,\n};\n","import {PenaltyFunction1} from './function-implementations/penalty-function-1';\nimport {PenaltyFunction2} from './function-implementations/penalty-function-2';\nimport {RosenbrockFunction} from './function-implementations/rosenbrock-function';\nimport {PowellFunction} from './function-implementations/powell-function';\nimport {FunctionMetadata} from './function';\nexport * from './function';\n\nexport const functionsToOptimize: Map<string, FunctionMetadata> = new Map([\n  [PenaltyFunction1.id, PenaltyFunction1],\n  [PenaltyFunction2.id, PenaltyFunction2],\n  [RosenbrockFunction.id, RosenbrockFunction],\n  [PowellFunction.id, PowellFunction],\n]);\n","module.exports = __webpack_public_path__ + \"static/media/penalty-function-1.857c236f.svg\";","module.exports = __webpack_public_path__ + \"static/media/penalty-function-2.77d1764b.svg\";","module.exports = __webpack_public_path__ + \"static/media/rosenbrock-function.dfc14948.svg\";","module.exports = __webpack_public_path__ + \"static/media/powell-function.e9525fb4.svg\";","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export function dividedDifferences(\n  func: Function,\n  vectorX: number[],\n  fnOutputForVectorX: number,\n  h: number\n): number[] {\n  const res = new Array(vectorX.length);\n  for (let i = 0; i < vectorX.length; i++) {\n    const newVectorX = [...vectorX];\n    newVectorX[i] += h;\n    res[i] = (func(newVectorX) - fnOutputForVectorX) / h;\n  }\n  return res;\n}\n\nexport function findEuclidNorm(vector: number[]): number {\n  let norma = 0;\n  for (let i = 0; i < vector.length; i++) {\n    norma += Math.pow(vector[i], 2);\n  }\n  norma = Math.sqrt(norma);\n  return norma;\n}\n\nexport function getLenOfTheStepAndNextVector(\n  func: Function,\n  vectorX: number[],\n  fnOutputForVectorX: number,\n  prevLenOfTheStep: number,\n  derivativeValues: number[]\n): [number, number[], number] {\n  let nextVectorX = calculateNextValue(\n    vectorX,\n    prevLenOfTheStep,\n    derivativeValues\n  );\n  let fnOutputForNextVectorX = func(nextVectorX);\n  const upperLimitation = Math.pow(findEuclidNorm(derivativeValues), 2) * 0.5;\n  while (\n    fnOutputForVectorX - fnOutputForNextVectorX <=\n    upperLimitation * prevLenOfTheStep\n  ) {\n    prevLenOfTheStep /= 1.25;\n    //case when we have almost zeroo\n    if (prevLenOfTheStep === prevLenOfTheStep / 1.25) {\n      break;\n    }\n    nextVectorX = calculateNextValue(\n      vectorX,\n      prevLenOfTheStep,\n      derivativeValues\n    );\n    fnOutputForNextVectorX = func(nextVectorX);\n  }\n  return [prevLenOfTheStep, nextVectorX, fnOutputForNextVectorX];\n}\n\nfunction calculateNextValue(\n  vectorX: number[],\n  alpha: number,\n  diff: number[]\n): number[] {\n  const res = new Array(vectorX.length);\n  for (let i = 0; i < vectorX.length; i++) {\n    res[i] = vectorX[i] - alpha * diff[i];\n  }\n  return res;\n}\n\nexport function addVectorsByRule(\n  ruleFn: Function,\n  vectorX: number[],\n  vectorY: number[]\n): number[] {\n  if (vectorX.length !== vectorY.length) {\n    throw new Error('vectors length mismatch');\n  }\n  const res = new Array(vectorX.length);\n  for (let i = 0; i < vectorX.length; i++) {\n    res[i] = ruleFn(vectorX[i], vectorY[i]);\n  }\n  return res;\n}\n\nexport function getNextLenOfTheStep(len: number): number {\n  return (len + 1) / 2;\n}\n","import {\n  dividedDifferences,\n  getLenOfTheStepAndNextVector,\n  findEuclidNorm,\n  addVectorsByRule,\n  getNextLenOfTheStep,\n} from './utils';\nimport {OptimizationAlgoMetadata} from '../run-optimization';\nfunction twoStepDifferenceGradientMethod(\n  func: Function,\n  x: number[],\n  epsilon: number,\n  gamma: number\n): [number[], number] {\n  let countOfSteps = 0;\n  let vectorX = x;\n  let alpha = 0.01;\n  let beta = 0.01;\n  let h1 = 0.0001;\n  let h2 = 0.0001;\n  while (true) {\n    countOfSteps++;\n    const fnOutputForVectorX = func(vectorX);\n    const derivativeValuesU = dividedDifferences(\n      func,\n      vectorX,\n      fnOutputForVectorX,\n      h1\n    );\n    const valuesU = getLenOfTheStepAndNextVector(\n      func,\n      vectorX,\n      fnOutputForVectorX,\n      alpha,\n      derivativeValuesU\n    );\n    alpha = getNextLenOfTheStep(valuesU[0]);\n    const vectorU = valuesU[1];\n    const step2VectorX = addVectorsByRule(\n      (x: number, y: number) => gamma * x + (1 - gamma) * y,\n      vectorU,\n      vectorX\n    );\n    const step2FnOutputForVectorX = func(step2VectorX);\n    const derivativeValuesStep2 = dividedDifferences(\n      func,\n      step2VectorX,\n      step2FnOutputForVectorX,\n      h2\n    );\n    const valuesStep2 = getLenOfTheStepAndNextVector(\n      func,\n      vectorX,\n      fnOutputForVectorX,\n      beta,\n      derivativeValuesStep2\n    );\n    beta = getNextLenOfTheStep(valuesStep2[0]);\n    const nextVectorX = valuesStep2[1];\n    const fnOutputForNextVectorX = valuesStep2[2];\n    h1 = Math.min(h1, findEuclidNorm(derivativeValuesU));\n    h2 = Math.min(h2, findEuclidNorm(derivativeValuesStep2));\n    const diffBetweenSteps = Math.max.apply(\n      addVectorsByRule(\n        (x: number, y: number) => Math.abs(x - y),\n        vectorX,\n        nextVectorX\n      )\n    );\n    vectorX = nextVectorX;\n    if (\n      Math.abs(fnOutputForVectorX - fnOutputForNextVectorX) < epsilon &&\n      diffBetweenSteps < epsilon\n    ) {\n      break;\n    }\n  }\n  return [vectorX, countOfSteps];\n}\n\nconst gamma: number[] = [0.1, 0.3, 0.5, 0.6, 0.8];\n\nfunction getTwoStepDifferenceGradientMethod(\n  gamma: number\n): OptimizationAlgoMetadata {\n  return {\n    id: `twoStepDifferenceGradientMethodWithGamma${gamma}`,\n    name: `Two-step difference-gradient method with γ = ${gamma}`,\n    method: (func: Function, x: number[], epsilon: number) =>\n      twoStepDifferenceGradientMethod(func, x, epsilon, gamma),\n  };\n}\n\nexport const twoStepDifferenceGradientMethods: OptimizationAlgoMetadata[] = gamma.map(\n  getTwoStepDifferenceGradientMethod\n);\n","import {\n  dividedDifferences,\n  findEuclidNorm,\n  getLenOfTheStepAndNextVector,\n  addVectorsByRule,\n  getNextLenOfTheStep,\n} from './utils';\nimport {OptimizationAlgoMetadata} from '../run-optimization';\nfunction differenceGradientMethod(\n  func: Function,\n  x: number[],\n  epsilon: number\n): [number[], number] {\n  let countOfSteps = 0;\n  let vectorX = x;\n  let alpha = 0.01;\n  let h = 0.0001;\n  while (true) {\n    countOfSteps++;\n    const fnOutputForVectorX = func(vectorX);\n    const derivativeValues = dividedDifferences(\n      func,\n      vectorX,\n      fnOutputForVectorX,\n      h\n    );\n    const values = getLenOfTheStepAndNextVector(\n      func,\n      vectorX,\n      fnOutputForVectorX,\n      alpha,\n      derivativeValues\n    );\n    alpha = getNextLenOfTheStep(values[0]);\n    const nextVectorX = values[1];\n    const fnOutputForNextVectorX = values[2];\n    h = Math.min(h, findEuclidNorm(derivativeValues));\n    const diffBetweenSteps = Math.max.apply(\n      addVectorsByRule(\n        (x: number, y: number) => Math.abs(x - y),\n        vectorX,\n        nextVectorX\n      )\n    );\n    vectorX = nextVectorX;\n    if (\n      Math.abs(fnOutputForVectorX - fnOutputForNextVectorX) < epsilon &&\n      diffBetweenSteps < epsilon\n    ) {\n      break;\n    }\n  }\n  return [vectorX, countOfSteps];\n}\n\nexport const DifferenceGradientMethod: OptimizationAlgoMetadata = {\n  id: 'differenceGradientMethod',\n  name: 'Difference-gradient method',\n  method: differenceGradientMethod,\n};\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export interface OptimizationAlgoMetadata {\n  id: string;\n  name: string;\n  method: Function;\n}\nexport interface OptimizationResultData {\n  /*name: string;*/\n  countOfIteration: number;\n  countOfCalculationFX: number;\n  timeInMs: number;\n  outputMin: number;\n  xMin: number[];\n}\nclass FunctionToCall {\n  private fn: Function;\n  private callCount: number;\n  constructor(_fn: Function) {\n    this.fn = _fn;\n    this.callCount = 0;\n  }\n  callFn(x: number[]) {\n    this.callCount++;\n    return this.fn(x);\n  }\n  getCallCount(): number {\n    return this.callCount;\n  }\n}\nfunction calculatePrecision(epsilon: number) {\n  let precision = 0;\n  while (epsilon < 1) {\n    epsilon *= 10;\n    precision++;\n  }\n  return precision;\n}\nexport function runOptimization(\n  method: Function,\n  fn: Function,\n  x: number[],\n  epsilon: number\n): OptimizationResultData {\n  const floatNumberPrecision = calculatePrecision(epsilon);\n  const wrapedFn = new FunctionToCall(fn);\n  const fnToCall = wrapedFn.callFn.bind(wrapedFn);\n  const t1 = performance.now();\n  const [xMinUnrounded, countOfIteration] = method(fnToCall, x, epsilon);\n  const t2 = performance.now();\n  const countOfCalculationFX = wrapedFn.getCallCount();\n  const outputMin = fn(xMinUnrounded).toFixed(floatNumberPrecision);\n  const xMin = xMinUnrounded.map((num: number) =>\n    num.toFixed(floatNumberPrecision)\n  );\n  const timeInMs = Math.round(t2 - t1);\n  return {\n    xMin,\n    outputMin,\n    countOfIteration,\n    countOfCalculationFX,\n    timeInMs,\n  };\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import {twoStepDifferenceGradientMethods} from './optimization/two-step-difference-gradient-method';\nimport {DifferenceGradientMethod} from './optimization/difference-gradient-method';\nimport {OptimizationAlgoMetadata} from './run-optimization';\nexport * from './run-optimization';\n\nexport const optimizationMethods: Map<\n  string,\n  OptimizationAlgoMetadata\n> = new Map([\n  [DifferenceGradientMethod.id, DifferenceGradientMethod],\n  ...twoStepDifferenceGradientMethods.map((algo: OptimizationAlgoMetadata): [\n    string,\n    OptimizationAlgoMetadata\n  ] => [algo.id, algo]),\n]);\n","export enum MinimizationWorkerMessageTypes {\n  OPTIMIZE_FUNCTION,\n  RSULT_OF_OPTIMIZATION,\n}\n","import {optimizationMethods, runOptimization} from '../minimization-algorithms';\nimport {functionsToOptimize} from '../functions';\nimport {MinimizationWorkerMessageTypes} from './worker-messages';\n\nconst onOptimizeFunction = params => {\n  if (params === undefined || !Array.isArray(params) || params.length === 0) {\n    return;\n  }\n  const messageType = params.shift();\n  if (messageType !== MinimizationWorkerMessageTypes.OPTIMIZE_FUNCTION) {\n    return;\n  }\n  const [vectorX, epsilon, functionId, optimizationMethodId] = params;\n  const optimizationResult = runOptimization(\n    optimizationMethods.get(optimizationMethodId).method,\n    functionsToOptimize.get(functionId).functionToCall,\n    vectorX,\n    epsilon\n  );\n  // eslint-disable-next-line no-restricted-globals\n  self.postMessage([\n    MinimizationWorkerMessageTypes.RSULT_OF_OPTIMIZATION,\n    optimizationResult,\n  ]);\n};\n// eslint-disable-next-line no-restricted-globals\nself.addEventListener('message', event => {\n  const data = event.data;\n  onOptimizeFunction(data);\n});\n"],"sourceRoot":""}